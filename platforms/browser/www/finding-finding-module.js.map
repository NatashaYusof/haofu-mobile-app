{"version":3,"sources":["./src/app/pages/finding/finding.page.html","./src/app/pages/finding/finding.module.ts","./src/app/pages/finding/finding.page.scss","./src/app/pages/finding/finding.page.ts"],"names":[],"mappings":"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","file":"finding-finding-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button  defaulthref=\\\"\\\"></ion-back-button>\\n        </ion-buttons>\\n      <ion-title>\\n          JOBCARD\\n      </ion-title>\\n     \\n    </ion-toolbar>\\n  </ion-header>\\n\\n\\n<ion-content padding>\\n  <ion-item>\\n  <ion-label class=\\\"font\\\"><b>Serial Number: {{serialNo.partrecordserialnumber}}</b></ion-label>\\n</ion-item>\\n\\n  <ion-card>\\n  <ion-item>\\n    <ion-label>{{jobcardDetail.jobcardtitle}}</ion-label>\\n    <ion-badge color=\\\"danger\\\">{{jobcardDetail.jobcardtotaltaskcount-jobcardDetail.jobcardcompletedtaskcount-jobcardDetail.jobcardprogresstaskcount}}</ion-badge>\\n    <ion-badge color=\\\"warning\\\">{{jobcardDetail.jobcardprogresstaskcount}}</ion-badge>\\n    <ion-badge color=\\\"success\\\">{{jobcardDetail.jobcardcompletedtaskcount}}</ion-badge>\\n  </ion-item>\\n  <ion-item>\\n  <ion-label class=\\\"font\\\"><b>FINDING</b><br><br><br>Date<br><br>{{currentDate}}\\n    <br><br><br>Task References<br><br>{{childtaskId}}\\n    <br><br><br>Title<ion-item><ion-textarea placeholder=\\\"Enter title here...\\\"></ion-textarea></ion-item>\\n    <br><br>Description<ion-item><ion-textarea placeholder=\\\"Enter description here...\\\"></ion-textarea></ion-item>\\n  </ion-label>\\n</ion-item>\\n  <ion-item>  \\n    <ion-icon name=\\\"attach\\\" ></ion-icon><ion-label (click)=\\\"pickImage()\\\" class=\\\"font2\\\" tappable >Attach Image</ion-label>\\n  </ion-item>\\n     \\n    \\n      <!-- <ion-item> -->\\n        <!-- <ion-item>\\n          <ng-container *ngIf=\\\"imageLists\\\">  \\n              <ion-item>  \\n                <ion-row *ngIf=\\\"imageLists.length>0\\\">  \\n                    <ion-col style=\\\"padding:10px;\\\" col-3 *ngFor=\\\"let imageSrc of imageLists;\\\">  \\n                        <ion-card>  \\n                            <ion-thumbnail item-start>  \\n                                <img src=\\\"data:image/jpeg;base64,{{imageSr}}\\\" alt=\\\"\\\"/>  \\n                            </ion-thumbnail>  \\n                        </ion-card>  \\n                    </ion-col>  \\n                </ion-row>  \\n            </ion-item>  \\n        </ng-container>  \\n        </ion-item> -->\\n        <ion-row>\\n          <ion-col>\\n            <!-- More Pinterest floating gallery style -->\\n            <div class=\\\"images\\\">\\n              <div class=\\\"one-image\\\" *ngFor=\\\"let img of imageResponse\\\">\\n                <img src=\\\"{{img}}\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n              </div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n<ion-item>\\n   <img src= \\\"../../../assets/icon/i1.PNG\\\" id=\\\"1\\\" tappable (click)=\\\"goToCanvas()\\\"> \\n   <!-- <img src= \\\"{{ imageSrc}}\\\" alt=\\\"\\\" (click)=\\\"action()\\\" /> -->\\n</ion-item>\\n\\n<!-- <ion-row>\\n  <ion-col> -->\\n    <!-- More Pinterest floating gallery style\\n    <div class=\\\"images\\\">\\n      <div class=\\\"one-image\\\" *ngFor=\\\"let img of imageResponse\\\">\\n        <img src=\\\"{{img}}\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n      </div>\\n    </div>\\n  </ion-col>\\n</ion-row> -->\\n\\n    <!-- <ion-slides class=\\\"card\\\">\\n      <ion-slide>    \\n         <div class=\\\"scrolling-wrapper\\\"> -->\\n            <!-- <ion-card class=\\\"card\\\">\\n             <img src= \\\"../../../assets/icon/i1.PNG\\\" id=\\\"1\\\" tappable (click)=\\\"goToCanvas()\\\">    -->\\n              <!-- <ion-icon *ngFor=\\\"let avatar of avatars\\\" name=\\\"radio-button-on\\\" class=\\\"scroll-item selectable-icon\\\"></ion-icon> -->\\n        <!-- </ion-card>\\n      </ion-slide>\\n      <ion-slide>    \\n        <ion-card class=\\\"card\\\">      \\n             <img src= \\\"../../../assets/icon/i1.PNG\\\" id=\\\"1\\\" tappable (click)=\\\"goToCanvas()\\\"> -->\\n                <!-- <ion-icon *ngFor=\\\"let avatar of avatars\\\" name=\\\"radio-button-on\\\" class=\\\"scroll-item selectable-icon\\\"></ion-icon> -->\\n         <!-- </ion-card>     \\n      </ion-slide>\\n    </ion-slides> -->\\n  <!-- </div> -->\\n  <!-- </div> -->\\n\\n\\n\\n    <!-- </ion-item> -->\\n    <!-- <ion-button expand=\\\"block\\\" color=\\\"primary\\\" height=\\\"10px\\\"><ion-icon name=\\\"create\\\" ></ion-icon>Edit Image</ion-button> -->\\n  </ion-card>\\n\\n  <ion-button expand=\\\"full\\\" color=\\\"primary\\\">Save</ion-button>\\n</ion-content>\\n\\n<ion-toolbar>\\n    <ion-tabs>\\n    <ion-tab-bar slot=\\\"bottom\\\" fixed>\\n      <ion-tab-button tab=\\\"pause\\\" >\\n        <ion-label class=\\\"button3\\\"  (click)=\\\"goPause()\\\" >{{btn_txt}}</ion-label>\\n      </ion-tab-button>\\n  \\n      <ion-tab-button tab=\\\"finish\\\">\\n        <ion-label class=\\\"button3\\\" (click)=\\\"goFinish()\\\">FINISH</ion-label>\\n      </ion-tab-button>\\n  \\n    </ion-tab-bar>\\n  </ion-tabs></ion-toolbar>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FindingPage } from './finding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FindingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FindingPage]\n})\nexport class FindingPageModule {}\n","module.exports = \".expand {\\n  font-size: 11.5px;\\n  max-width: 60px; }\\n\\n.font2 {\\n  font-size: 11.5px;\\n  color: darkcyan; }\\n\\n.button3 {\\n  font-size: 11.5px;\\n  color: darkcyan;\\n  text-align: center; }\\n\\n.button {\\n  font-size: 11px;\\n  color: darkcyan;\\n  background-color: transparent;\\n  text-align: left; }\\n\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap; }\\n\\n.scrolling-wrapper .card {\\n    display: inline-block; }\\n\\n.image-container {\\n  min-height: 200px;\\n  background-size: cover; }\\n\\n@media (min-width: 0px) {\\n  .images {\\n    -webkit-column-count: 2;\\n       -moz-column-count: 2;\\n            column-count: 2; } }\\n\\n@media (min-width: 420px) {\\n  .images {\\n    -webkit-column-count: 3;\\n       -moz-column-count: 3;\\n            column-count: 3; } }\\n\\n@media (min-width: 720px) {\\n  .images {\\n    -webkit-column-count: 4;\\n       -moz-column-count: 4;\\n            column-count: 4; } }\\n\\n.one-image {\\n  margin: 2px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZmluZGluZy9DOlxccHJvamVjdFxcbmF0YXNoYS9zcmNcXGFwcFxccGFnZXNcXGZpbmRpbmdcXGZpbmRpbmcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCO0VBQ2pCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxpQkFBaUI7RUFDakIsZUFBZSxFQUFBOztBQUVuQjtFQUNJLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksZUFBZTtFQUNmLGVBQWU7RUFDZiw2QkFBNkI7RUFDN0IsZ0JBQWdCLEVBQUE7O0FBR2hCO0VBQ0ksa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFBQTs7QUFIdkI7SUFPTSxxQkFBcUIsRUFBQTs7QUFHekI7RUFDRSxpQkFBaUI7RUFDakIsc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0U7SUFDRSx1QkFBZTtPQUFmLG9CQUFlO1lBQWYsZUFBZSxFQUFBLEVBQ2hCOztBQUdIO0VBQ0U7SUFDRSx1QkFBZTtPQUFmLG9CQUFlO1lBQWYsZUFBZSxFQUFBLEVBQ2hCOztBQUdIO0VBQ0U7SUFDRSx1QkFBZTtPQUFmLG9CQUFlO1lBQWYsZUFBZSxFQUFBLEVBQ2hCOztBQUdIO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZmluZGluZy9maW5kaW5nLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leHBhbmR7XHJcbiAgICBmb250LXNpemU6IDExLjVweDtcclxuICAgIG1heC13aWR0aDogNjBweDtcclxufVxyXG5cclxuLmZvbnQye1xyXG4gICAgZm9udC1zaXplOiAxMS41cHg7XHJcbiAgICBjb2xvcjogZGFya2N5YW47XHJcbn1cclxuLmJ1dHRvbjN7XHJcbiAgICBmb250LXNpemU6IDExLjVweDtcclxuICAgIGNvbG9yOiBkYXJrY3lhbjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmJ1dHRvbntcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIGNvbG9yOiBkYXJrY3lhbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuICAgIC5zY3JvbGxpbmctd3JhcHBlciB7XHJcbiAgICAgICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xyXG4gICAgICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICBcclxuICAgICAgXHJcbiAgICAgICAgLmNhcmQge1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuaW1hZ2UtY29udGFpbmVyIHtcclxuICAgICAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICB9XHJcbiAgICAgICBcclxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDBweCkge1xyXG4gICAgICAgIC5pbWFnZXMge1xyXG4gICAgICAgICAgY29sdW1uLWNvdW50OiAyO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0MjBweCkge1xyXG4gICAgICAgIC5pbWFnZXMge1xyXG4gICAgICAgICAgY29sdW1uLWNvdW50OiAzO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3MjBweCkge1xyXG4gICAgICAgIC5pbWFnZXMge1xyXG4gICAgICAgICAgY29sdW1uLWNvdW50OiA0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgIC5vbmUtaW1hZ2Uge1xyXG4gICAgICAgIG1hcmdpbjogMnB4O1xyXG4gICAgICB9XHJcbiAgICAgICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../../../src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, ActionSheetController } from '@ionic/angular';\nimport { JobcardService } from '../../../../src/app/services/jobcard.service';\nimport * as moment from 'moment';\nimport { Camera, CameraOptions } from '@ionic-native/Camera/ngx'\nimport { File } from '@ionic-native/file/ngx';\nimport { ImagePickerOptions,ImagePicker } from '@ionic-native/image-picker/ngx';\nimport { Crop } from '@ionic-native/crop/ngx';\nimport { Base64 } from '@ionic-native/base64/ngx';\n// import { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\n\n@Component({\n  selector: 'app-finding',\n  templateUrl: './finding.page.html',\n  styleUrls: ['./finding.page.scss'],\n})\nexport class FindingPage implements OnInit {\n  serialNo: string;\n  jcTitle: string;\n  jobcardId: string;\n  taskTitle: string;\n  taskId: string;\n  currentDate: any;\n  formattedDate: string;\n  childtaskId: string;\n  btn_txt = 'PAUSE';\n  \n  croppedImagepath = \"\";\n  isLoading = false;\n \n  imagePickerOptions = {\n    maximumImagesCount: 5,\n    quality: 50\n  };\n  picture: string;\n  imageSrc: any;\n  userDetail: string;\n  details: any;\n  TimeService: any;\n  loading: any;\n  jobcardDetail: string;\n  actionSheet:any;\n  public imageLists: any[] = []; \n  photos: string[];\n  cropService: any;\n  imgPreview: any;\n  regData: any;\n  imageResponse: any[];\n  \n  constructor(private http: LoginService, private router: Router, public alertController: AlertController,public loadingCtrl: LoadingController,\n    public JobcardService: JobcardService,private camera: Camera,public actionSheetController: ActionSheetController, public imagePicker: ImagePicker,\n    private crop: Crop, private file: File,  private base64: Base64) { }\n\n  ngOnInit() {\n    this.serialNo=this.JobcardService.serialNo;\n    this.jcTitle=this.JobcardService.jcTitle;\n    this.jobcardId=this.JobcardService.jobcardId;\n    this.taskTitle=this.JobcardService.taskTitle;\n    this.taskId=this.JobcardService.taskId;\n    this.childtaskId=this.JobcardService.childtaskId;\n    console.log(this.JobcardService.childtaskId);\n    this.jobcardDetail = this.JobcardService.jobcardDetails;\n    this.currentDate = moment().format('YYYY-MM-DD HH:mm:ss');\n    console.log(this.currentDate)\n\n    this.userDetail = window.localStorage.getItem('userDetail')\n    this.details = JSON.parse(this.userDetail)\n    console.log(this.details)\n \n    this.getJobcardByEmployeeId(this.details.employee.employeeid)\n \n  }\n  getJobcardByEmployeeId(employeeid: any): any {\n  //  throw new Error(\"Method not implemented.\");\n\n  }\n\n  // goPause() {\n  //   // console.log(taskid)\n  //   if (this.btn_txt == \"PAUSE\") {\n  //     this.btn_txt = \"RESUME\";\n  //     // this.JobcardService.taskId=taskid;\n  //     // this.currentDate = moment().format('YYYY-MM-DD HH:mm:ss');\n\n  //       //postApi\n  //       let data =[{\n  //         taskid :this.JobcardService.taskId,\n  //         employeeid :this.details.employee.employeeid,\n  //         tasktimemanagementenddatetime: this.currentDate,\n  //         tasktimemanagementendstate:2\n  //       }\n  //       ]\n\n  //       let data1 =[{\n  //         taskstatus:[{\"taskstatusid\":2}],\n  //         employeeid :this.details.employee.employeeid,\n  //         taskid :this.JobcardService.taskId,\n  //       }\n  //       ]\n  //       console.log(data)\n  //       console.log(data1)\n  //       this.TimeService.postStart(data).subscribe((response) => {\n  //         console.log(response)\n  //         this.TimeService.postStart1(data1).subscribe((response) => {\n  //           this.loading.dismiss(); \n  //           console.log(response)\n        \n  //         });\n  //       });\n  //     // document.body.style.backgroundColor ='#b8bdc2';\n\n\n  //   } else {\n  //     this.btn_txt = \"PAUSE\";\n\n  //    // this.currentDate = moment().format('YYYY-MM-DD HH:mm:ss');\n\n  //     //postApi\\\n  //     let data =[{\n  //       taskid :this.JobcardService.taskId,\n  //       employeeid :this.details.employee.employeeid,\n  //       tasktimemanagementstartdatetime: this.currentDate,\n  //       tasktimemanagementstartstate:3\n  //     }\n  //     ]\n\n  //     let data1 =[{\n  //       taskstatus:[{\"taskstatusid\":3}],\n  //       employeeid :this.details.employee.employeeid,\n  //       taskid :this.JobcardService.taskId,\n  //     }\n  //     ]\n  //     console.log(data)\n  //     console.log(data1)\n  //     this.TimeService.postStart(data).subscribe((response) => {\n  //       console.log(response)\n  //       this.TimeService.postStart1(data1).subscribe((response) => {\n  //         this.loading.dismiss(); \n  //         console.log(response)\n      \n  //       });\n  //     });\n  //     // document.body.style.backgroundColor = 'transparent';\n  //   }\n  // }\n  \n  // goFinish(){\n\n  //   // this.currentDate = moment().format('YYYY-MM-DD HH:mm:ss');\n\n  //       //postApi\n  //       let data =[{\n  //         taskid :this.JobcardService.taskId,\n  //         employeeid :this.details.employee.employeeid,\n  //         tasktimemanagementenddatetime: this.currentDate,\n  //         tasktimemanagementendstate:4\n\n  //       }\n  //       ]\n  \n  //       let data1 =[{\n  //         taskstatus:[{\"taskstatusid\":4}],\n  //         employeeid :this.details.employee.employeeid,\n  //         taskid :this.JobcardService.taskId,\n  //       }\n  //       ]\n  //       console.log(data)\n  //       console.log(data1)\n  //       this.TimeService.postStart(data).subscribe((response) => {\n  //         console.log(response)\n  //         this.TimeService.postStart1(data1).subscribe((response) => {\n  //           this.loading.dismiss(); \n  //           console.log(response)\n        \n  //         });\n  //       });\n  // }\n\n  pickImage1(sourceType) {\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType:  sourceType,\n      // destinationType: this.camera.DestinationType.FILE_URI,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE\n      // quality: 100,\n      // destinationType: this.camera.DestinationType.FILE_URI,\n      // encodingType: this.camera.EncodingType.JPEG,\n      // mediaType: this.camera.MediaType.PICTURE\n    }\n    this.camera.getPicture(options).then((imageData) => {\n      // imageData is either a base64 encoded string or a file URI\n      // If it's base64 (DATA_URL):\n      this.imageSrc = 'data:image/jpeg;base64,' + imageData;\n      // this.photos.push(this.imageSrc);\n      // this.photos.reverse();\n      // this.picture = imageSrc.replace('file://', '');\n      // console.log(this.picture);\n      // this.picture=imageData.replace('file://', '');\n    }, (err) => {\n      // Handle error\n    });\n  }\n  \n  pickImage2() {\n    // let options = {\n    //   maximumImagesCount: 5\n    // };\n    // this.imagePicker.getPictures(options).then((results) => {\n    //   for (var i = 0; i < results.length; i++) {\n    //       this.imgPreview = results[i];\n    //       this.base64.encodeFile(results[i]).then((base64File: string) => {\n    //         this.regData.imgPreview2 = base64File;\n    //       }, (err) => {\n    //         console.log(err);\n    //       });\n    //   }\n    // }, (err) => { });\n  //   let options: ImagePickerOptions = {  \n  //     //here Quality of images, defaults to 100  \n  //     quality: 100,  \n  //     //here Width of an Image  \n  //     width: 600,  \n  //     // sourceType:  sourceType,\n  //     //here Height of an Image  \n  //     height: 600,  \n  //     // destinationType: this.camera.DestinationType.DATA_URL,\n  //     // encodingType: this.camera.EncodingType.JPEG,\n  //     // mediaType: this.camera.MediaType.PICTURE,\n  //     /** Output type, defaults to 0 (FILE_URI). \n\n  //     * FILE_URI :0 (number) it returns a actual path for an image \n\n  //     // */  \n  //     // DATA_URI: 1(number) it returns a base64 data  \n  //     // for an image  \n  //     outputType: 1  ,\n  //     //here Maximum image count for selection, defaults to 15.  \n  //     maximumImagesCount: 15\n  //     //while setting a number 15 we can load 15 images in one selection.  \n  // };  \n  let options = {\n    // Android only. Max images to be selected, defaults to 15. If this is set to 1, upon\n    // selection of a single image, the plugin will return it.\n    //maximumImagesCount: 3,\n\n    // max width and height to allow the images to be.  Will keep aspect\n    // ratio no matter what.  So if both are 800, the returned image\n    // will be at most 800 pixels wide and 800 pixels tall.  If the width is\n    // 800 and height 0 the image will be 800 pixels wide if the source\n    // is at least that wide.\n    width: 200,\n    //height: 200,\n\n    // quality of resized image, defaults to 100\n    quality: 25,\n\n    // output type, defaults to FILE_URIs.\n    // available options are \n    // window.imagePicker.OutputTioniype.FILE_URI (0) or \n    // window.imagePicker.OutputType.BASE64_STRING (1)\n    outputType: 1\n  };\n  this.imageResponse = [];\n  this.imagePicker.getPictures(options).then((results) => {\n    for (var i = 0; i < results.length; i++) {\n      console.log( results[i])\n      this.imageResponse.push('data:image/jpeg;base64,' + results[i]);\n    }\n  }, (err) => {\n    alert(err);\n  });\n}\n\n\n  async pickImage() {\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Select Image source\",\n      buttons: [{\n        text: 'Load from Library',\n        icon: 'images',\n        handler: () => {\n          this.pickImage2();\n        }\n      },\n      {\n        text: 'Use Camera',\n        icon: 'camera',\n        handler: () => {\n          this.pickImage1(this.camera.PictureSourceType.CAMERA);\n        }\n      },\n      {\n        text: 'Cancel',\n        icon: 'close',\n        role: 'cancel'\n      }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  action()\n{\n  this. presentActionSheet();\n}\n\npresentActionSheet() {\n  this.actionSheet = this.actionSheetController.create({\n    buttons: [{\n      text: 'Delete',\n      role: 'destructive',\n      icon: 'trash',\n      handler: () => {\n        console.log('Delete clicked');\n      }\n    }, {\n      text: 'Edit',\n      icon: 'brush',\n      handler: () => {\n        console.log('Edit clicked');\n        this.router.navigateByUrl('/menu/first/tabs/tab1/jobcard/task/childtask/finding/canvas');\n      }\n    }, {\n      text: 'Cancel',\n      icon: 'close',\n      role: 'cancel',\n      handler: () => {\n        console.log('Cancel clicked');\n      }\n    }]\n  }).then(actionsheet => {\n    actionsheet.present();\n  });\n}\n\n  goToCanvas()\n  {\n    this.router.navigateByUrl('/menu/first/tabs/tab1/jobcard/task/childtask/finding/canvas');\n  }\n}\n"],"sourceRoot":""}