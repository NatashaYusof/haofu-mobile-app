{"version":3,"sources":["./src/app/pages/jobcard/jobcard.page.html","./src/app/pages/jobcard/jobcard.module.ts","./src/app/pages/jobcard/jobcard.page.scss","./src/app/pages/jobcard/jobcard.page.ts","./src/app/services/login.service.ts"],"names":[],"mappings":"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","file":"jobcard-jobcard-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button  defaulthref=\\\"\\\"></ion-back-button>\\n        </ion-buttons>\\n      <ion-title>\\n          JOBCARD\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n   \\n\\n<ion-content padding>\\n  \\n    <ion-label class=\\\"font\\\">Serial Number: {{serialNo.partrecordserialnumber}}</ion-label>\\n\\n<ion-card>\\n<ion-item *ngFor=\\\"let jctitle of serialNo.jobcards\\\">\\n  <ion-label><b>{{jctitle.jobcardtitle}}</b></ion-label>\\n  <ion-label tappable class=\\\"ocr\\\" (click)=\\\"goToTaks(jctitle.jobcardid,jctitle)\\\" >OCR</ion-label>\\n</ion-item>\\n</ion-card>\\n\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JobcardPage } from './jobcard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobcardPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JobcardPage]\n})\nexport class JobcardPageModule {}\n","module.exports = \".font {\\n  font-size: 11.5px; }\\n\\n.ocr {\\n  color: darkcyan;\\n  max-width: 40px; }\\n\\n.button {\\n  font-size: 11px;\\n  color: darkcyan;\\n  background-color: transparent;\\n  text-align: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvam9iY2FyZC9DOlxccHJvamVjdFxcbmF0YXNoYS9zcmNcXGFwcFxccGFnZXNcXGpvYmNhcmRcXGpvYmNhcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksZUFBZTtFQUNmLGVBQWUsRUFBQTs7QUFFbkI7RUFDSSxlQUFlO0VBQ2YsZUFBZTtFQUNmLDZCQUE2QjtFQUM3QixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2pvYmNhcmQvam9iY2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9udHtcclxuICAgIGZvbnQtc2l6ZTogMTEuNXB4O1xyXG59XHJcblxyXG4ub2Nye1xyXG4gICAgY29sb3I6IGRhcmtjeWFuO1xyXG4gICAgbWF4LXdpZHRoOiA0MHB4O1xyXG59XHJcbi5idXR0b257XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBjb2xvcjogZGFya2N5YW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../../../src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { JobcardService } from '../../../../src/app/services/jobcard.service';\n\n@Component({\n  selector: 'app-jobcard',\n  templateUrl: './jobcard.page.html',\n  styleUrls: ['./jobcard.page.scss'],\n})\nexport class JobcardPage implements OnInit {\n  userID: any;\n  jobcard: any;\n  userDetail: any;\n  listJCard :any;\n  employeeid: any;\n  JCard: any;\n  serialno: string;\n  serialNo: any;\n\n  constructor(private http: LoginService, private router: Router, public alertController: AlertController,public JobcardService: JobcardService) { }\n\n  ngOnInit() {\n\n    // console.log( window.localStorage.getItem('serialno'))\n    // this.serialno = window.localStorage.getItem('serialno')\n    // this.serialno = JSON.parse(this.serialno)\n    // console.log(this.serialno)\n\n    this.userDetail =JSON.parse(window.localStorage.getItem('userDetail')) \n    console.log(this.userDetail.employeeid)\n   // this.getJobcardByEmployeeId(this.userDetail.employeeid)\n\n  this.serialNo=this.JobcardService.serialNo;\n  console.log(this.serialNo);\n  }\n\n\n  goToTaks(id,jctitle){\n    this.JobcardService.jcTitle=jctitle;\n    console.log(this.JobcardService.jcTitle);\n    this.JobcardService.jobcardId=id;\n    console.log(this.JobcardService.jobcardId);\n    this.router.navigateByUrl('/menu/first/tabs/tab1/jobcard/task/'+id);\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private baseURL = \"https://haofu.airbusdigital.com/api/hof/mro\"\n  private baseURL2 = \"https://smartmob.haofu.airbusdigital.com/hof-pdf/public/api/\"\n\n  constructor(private http: HttpClient) { }\n\n  // tslint:disable-next-line: variable-name\n\n  getUser(username, userpassword) : Observable<any> {\n    console.log(username+\" \"+userpassword)\n    return this.http.get(this.baseURL+'/user/login?username='+username+'&userpassword='+userpassword)\n      .pipe(\n        map( response => {\n          console.log(response)\n          return response\n        }),\n        catchError((err, caught) => {\n          console.log(err)\n          return throwError(err);\n        })\n      )\n  }\n\n  // getEmployee() : Observable<any> {\n  //   return this.http.get(this.baseURL+'/user')\n  //     .pipe(\n  //       map( response => {\n  //         console.log(response)\n  //         return response;\n  //       }),\n  //       catchError((err, caught) => {\n  //         console.log(err)\n  //         return throwError(err);\n  //       })\n  //     )\n  // }\n\n  getJobcard(employeeid) : Observable<any>{\n    return this.http.get(this.baseURL2+'get-jobcards/'+employeeid+'?remove=stopped,completed')\n    .pipe(\n      map( response => {\n        console.log(response)\n        return response\n      }),\n      catchError((err, caught) => {\n        console.log(err)\n        return throwError(err);\n      })\n    )\n}\n\ngetToTask(jobcardid) : Observable<any> {\n  return this.http.get(this.baseURL+'/jobcard?jobcardid='+jobcardid)\n    .pipe(\n      map( response => {\n        console.log(response)\n        return response;\n      }),\n      catchError((err, caught) => {\n        console.log(err)\n        return throwError(err);\n      })\n    )\n}\n\ngetChildTask(taskid) : Observable<any> {\n  return this.http.get(this.baseURL+'/task?taskid='+taskid)\n    .pipe(\n      map( response => {\n        console.log(response)\n        return response;\n      }),\n      catchError((err, caught) => {\n        console.log(err)\n        return throwError(err);\n      })\n    )\n}\n\n\n}\n"],"sourceRoot":""}