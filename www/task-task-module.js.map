{"version":3,"sources":["./src/app/pages/task/task.page.html","./src/app/pages/task/task.module.ts","./src/app/pages/task/task.page.scss","./src/app/pages/task/task.page.ts"],"names":[],"mappings":"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","file":"task-task-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button  defaulthref=\\\"\\\"></ion-back-button>\\n        </ion-buttons>\\n      <ion-title>\\n          JOBCARD\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content padding>\\n  <ion-item>\\n  <ion-label class=\\\"font\\\">Serial Number: {{serialNo.partrecordserialnumber}}</ion-label>\\n\\n  <ion-label class=\\\"expand\\\">Expand All</ion-label>\\n  <ion-toggle slot=\\\"end\\\" name=\\\"expand\\\" mode=\\\"md\\\" class=\\\"toggle-small\\\" toggle-class=\\\"toggle-calm\\\" (click)=\\\"hide()\\\"></ion-toggle>\\n</ion-item>\\n\\n\\n  <ion-card>\\n  <ion-item *ngFor=\\\"let jobcardDetail of id2\\\"> \\n  <ion-label>{{jobcardDetail.jobcardtitle}}</ion-label>\\n  <ion-badge color=\\\"danger\\\">{{jobcardDetail.jobcardtotaltaskcount-jobcardDetail.jobcardcompletedtaskcount-jobcardDetail.jobcardprogresstaskcount}}</ion-badge>\\n  <ion-badge color=\\\"warning\\\">{{jobcardDetail.jobcardprogresstaskcount}}</ion-badge>\\n  <ion-badge color=\\\"success\\\">{{jobcardDetail.jobcardcompletedtaskcount}}</ion-badge>\\n</ion-item>\\n \\n <ion-label *ngFor=\\\"let jobcardDetail of id2\\\">\\n  <ion-card-content class=\\\"font\\\" *ngIf=\\\"hideMe\\\"> \\n    Complete Percentage\\n    <ion-progress-bar  color=\\\"warning\\\" style=\\\"height:10px\\\" value=\\\"{{jcTitle.jobcardcompletedtaskcount * 1 / jcTitle.jobcardtotaltaskcount}}\\\"></ion-progress-bar> {{jobcardDetail.jobcardcompletedpercentage}}%</ion-card-content>\\n  <ion-card-content class=\\\"font\\\" *ngIf=\\\"hideMe\\\"> \\n    Short Time\\n    <ion-progress-bar color=\\\"warning\\\" style=\\\"height:10px \\\" value=\\\"0.2\\\"></ion-progress-bar>\\n  </ion-card-content>\\n  <ion-card-content class=\\\"font\\\" *ngIf=\\\"hideMe\\\"> \\n    Turn Around Time\\n    <ion-progress-bar  color=\\\"warning\\\" style=\\\"height:10px \\\" value=\\\"0.1\\\"></ion-progress-bar>\\n  </ion-card-content>\\n</ion-label>\\n</ion-card>\\n\\n<ion-label *ngFor=\\\"let jobcardDetail of id2\\\">\\n<ion-label  *ngFor=\\\"let jobcardid of id\\\">\\n<ion-item  class=\\\"font\\\">\\n<ion-label class=\\\"ion-text-wrap\\\" ><b>{{jobcardid.tasktitle}}</b></ion-label>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Resumed'\\\" src=\\\"assets/icon/start.jpg\\\" tappable width=\\\"30\\\" height=\\\"30\\\" slot=\\\"end\\\"  (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle,jobcardDetail)\\\"/>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Started'\\\" src=\\\"assets/icon/start.jpg\\\" tappable width=\\\"30\\\" height=\\\"30\\\" slot=\\\"end\\\"  (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle,jobcardDetail)\\\"/>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Not Started'\\\" src=\\\"assets/icon/start.jpg\\\" tappable width=\\\"30\\\" height=\\\"30\\\" slot=\\\"end\\\"  (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle,jobcardDetail)\\\"/>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Paused'\\\" src=\\\"assets/icon/start.jpg\\\" tappable width=\\\"30\\\" height=\\\"30\\\" slot=\\\"end\\\"  (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle,jobcardDetail)\\\"/>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Re-Open'\\\" src=\\\"assets/icon/start.jpg\\\" tappable width=\\\"30\\\" height=\\\"30\\\" slot=\\\"end\\\"  (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle,jobcardDetail)\\\"/>\\n<img *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Completed'\\\" src=\\\"assets/icon/tick.png\\\" width=\\\"18\\\" height=\\\"18\\\" slot=\\\"end\\\"/>\\n</ion-item>\\n<ion-grid> \\n    <ion-row>\\n      <ion-col width-50><button *ngIf=\\\"jobcardid.taskstatus[0].taskstatus == 'Completed'\\\" style=\\\"width:100%\\\" class=\\\"button\\\" (click)=\\\"goTime(jobcardid.taskid)\\\">TIME DURATION</button></ion-col>\\n    </ion-row>\\n </ion-grid>\\n</ion-label>\\n</ion-label>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskPage } from './task.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TaskPage]\n})\nexport class TaskPageModule {}\n","module.exports = \".font {\\n  font-size: 11.5px; }\\n\\n.font2 {\\n  font-size: 11.5px;\\n  color: darkcyan; }\\n\\n.expand {\\n  font-size: 11.5px;\\n  max-width: 60px; }\\n\\n.button {\\n  font-size: 11px;\\n  color: darkcyan;\\n  background-color: transparent;\\n  text-align: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGFzay9DOlxccHJvamVjdFxcbmF0YXNoYS9zcmNcXGFwcFxccGFnZXNcXHRhc2tcXHRhc2sucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksaUJBQWlCO0VBQ2pCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxpQkFBaUI7RUFDakIsZUFBZSxFQUFBOztBQUduQjtFQUNJLGVBQWU7RUFDZixlQUFlO0VBQ2YsNkJBQTZCO0VBQzdCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFzay90YXNrLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb250e1xyXG4gICAgZm9udC1zaXplOiAxMS41cHg7XHJcbn1cclxuXHJcbi5mb250MntcclxuICAgIGZvbnQtc2l6ZTogMTEuNXB4O1xyXG4gICAgY29sb3I6IGRhcmtjeWFuO1xyXG59XHJcblxyXG4uZXhwYW5ke1xyXG4gICAgZm9udC1zaXplOiAxMS41cHg7XHJcbiAgICBtYXgtd2lkdGg6IDYwcHg7XHJcbn1cclxuXHJcbi5idXR0b257XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBjb2xvcjogZGFya2N5YW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../../../src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController,ModalController } from '@ionic/angular';\nimport { JobcardService } from '../../../../src/app/services/jobcard.service';\nimport { TimeService } from '../../../../src/app/services/time.service';\nimport * as moment from 'moment';\nimport { TimedetailPage } from '../timedetail/timedetail.page';\n\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.page.html',\n  styleUrls: ['./task.page.scss'],\n})\nexport class TaskPage implements OnInit {\n  serialNo: string;\n  jcTitle: string;\n  jobcardId: string;\n  loading: any;\n  id: any;\n  hideMe: boolean;\n  toggle: any;\n  success=0;\n  imej:any;\n  imej1:any;\n  jobcardprogresstaskcount:any;\n  taskid: boolean;\n  currentDate: any;\n  userDetail: any;\n  details: any;\n  id2: any;\n  alertCtrl: any;\n  dataReturned: any;\n  \n  constructor(\n    private http: LoginService,\n    private router: Router,\n    public alertController: AlertController,\n    public loadingCtrl: LoadingController,\n    public JobcardService: JobcardService,\n    public TimeService:TimeService,\n    public modalController: ModalController\n    ) { \n\n      this.imej='assets/icon/start.png';\n      this.imej1='assets/icon/tick.png';\n     \n    }\n\n  ngOnInit() {\n    this.serialNo=this.JobcardService.serialNo;\n    this.jcTitle=this.JobcardService.jcTitle;\n    console.log(this.JobcardService)\n    console.log(this.jcTitle)\n    // console.log(this.jcTitle.jobcardprogresstaskcount)\n    this.jobcardId=this.JobcardService.jobcardId;\n    console.log(this.jobcardId)\n    this.getToTask( this.jobcardId);\n\n    this.userDetail = window.localStorage.getItem('userDetail')\n    this.details = JSON.parse(this.userDetail)\n    console.log(this.details)\n \n    this.getJobcardByEmployeeId(this.details.employee.employeeid)\n \n  }\n  getJobcardByEmployeeId(employeeid: any): any {\n  //  throw new Error(\"Method not implemented.\");\n  }\n\n  \n  async presentLoadingWithOptions() {\n    this.loading = await this.loadingCtrl.create({\n      message: 'Please Wait..',\n      translucent: true,\n      cssClass: 'custom-class custom-loading'\n    });\n   return await this.loading.present();\n  }\n\n  // async presentLoadingWithOptions1() {\n  //   this.loading = await this.loadingCtrl.create({\n  //     message: 'Start..',\n  //     translucent: true,\n  //     cssClass: 'custom-class custom-loading'\n  //   });\n  //  return await this.loading.present();\n  // }\n\n  getToTask(id){\n    this.presentLoadingWithOptions();\n   this.http.getToTask(id).subscribe(\n           response => {\n           this.loading.dismiss(); \n           this.id = response.Result[0].task;\n           this.id2=response.Result;\n           console.log(this.id)\n           console.log(this.id2)\n           \n           \n         }, error => {\n           console.log(\"error\")\n         }\n       );\n   \n   }\n\n   hide() {\n     if(  this.hideMe = true){\n      this.hideMe = true;\n     }else{\n      this.hideMe = false;\n     } \n       \n  }\n  \n   gotoChildTask(id,taskid,tasktitle,jobcardDetail){\n    // this.presentLoadingWithOptions1();\n        this.imej;\n        this.JobcardService.taskTitle=tasktitle;\n        console.log(this.JobcardService.taskTitle);\n        this.JobcardService.jobcardId=id;\n        console.log(this.JobcardService.jobcardId);\n        this.JobcardService.taskId=taskid;\n        console.log(this.JobcardService.taskId);\n        this.JobcardService.jobcardDetails=jobcardDetail;\n        this.currentDate = moment().format('YYYY-MM-DD HH:mm:ss');\n        \n        // //postApi\n        // let data =[{\n        //   taskid :this.JobcardService.taskId,\n        //   employeeid :this.details.employee.employeeid,\n        //   tasktimemanagementstartdatetime: this.currentDate,\n        //   tasktimemanagementstartstate:1\n        // }\n        // ]\n\n        // let data1 =[{\n        //   taskstatus:[{\"taskstatusid\":1}],\n        //   employeeid :this.details.employee.employeeid,\n        //   taskid :this.JobcardService.taskId,\n        // }\n        // ]\n        // console.log(data)\n        // console.log(data1)\n        // this.TimeService.postStart(data).subscribe((response) => {\n        //   console.log(response)\n        //   this.TimeService.postStart1(data1).subscribe((response) => {\n        //     this.loading.dismiss(); \n        //     console.log(response)\n          this.router.navigateByUrl('/menu/first/tabs/tab1/jobcard/task/'+id+'/childtask/'+taskid);\n  \n        //   });\n        // });\n   }\n  \n  async goTime(taskid) {\n    this.JobcardService.taskId=taskid;\n    const modal = await this.modalController.create({\n      component: TimedetailPage,\n      componentProps: {\n        \n        \"paramTaskId\": taskid,\n        // \"paramTitle\": \"Test Title\"\n      }\n    });\n \n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned !== null) {\n        this.dataReturned = dataReturned.data;\n        //alert('Modal Sent Data :'+ dataReturned);\n      }\n    });\n \n    return await modal.present();\n  }\n\n  }\n \n\n"],"sourceRoot":""}