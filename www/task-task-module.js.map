{"version":3,"sources":["webpack:///./src/app/pages/task/task.module.ts","webpack:///./src/app/pages/task/task.page.html","webpack:///./src/app/pages/task/task.page.scss","webpack:///./src/app/pages/task/task.page.ts"],"names":[],"mappings":"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","file":"task-task-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskPage } from './task.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TaskPage]\n})\nexport class TaskPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button  defaulthref=\\\"\\\"></ion-back-button>\\n        </ion-buttons>\\n      <ion-title>\\n          JOBCARD\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content padding>\\n  <ion-item>\\n  <ion-label class=\\\"font\\\">Serial Number: {{serialNo.partrecordserialnumber}}</ion-label>\\n\\n  <ion-label class=\\\"expand\\\">Expand All</ion-label>\\n  <ion-toggle slot=\\\"end\\\" name=\\\"expand\\\" mode=\\\"md\\\" class=\\\"toggle-small\\\" toggle-class=\\\"toggle-calm\\\" (click)=\\\"hide()\\\" ng-checked=\\\"checked\\\" ></ion-toggle>\\n</ion-item>\\n\\n  <ion-card *ngIf=\\\"hideMe\\\" >\\n  <ion-item >\\n  <ion-label>{{jcTitle.jobcardtitle}}</ion-label>\\n  <ion-badge color=\\\"danger\\\">{{jcTitle.jobcardtotaltaskcount-jcTitle.jobcardcompletedtaskcount-jcTitle.jobcardprogresstaskcount}}</ion-badge>\\n  <ion-badge color=\\\"warning\\\">{{jcTitle.jobcardprogresstaskcount}}</ion-badge>\\n  <ion-badge color=\\\"success\\\">{{jcTitle.jobcardcompletedtaskcount}}</ion-badge>\\n  </ion-item>\\n \\n      \\n  <ion-card-content class=\\\"font\\\"> \\n    Complete Percentage\\n    <ion-progress-bar  color=\\\"warning\\\" style=\\\"height:10px\\\" value=\\\"{{jcTitle.jobcardcompletedtaskcount * 1 / jcTitle.jobcardtotaltaskcount}}\\\"></ion-progress-bar> {{jcTitle.jobcardcompletedtaskcount * 100 / jcTitle.jobcardtotaltaskcount}}%</ion-card-content>\\n  <ion-card-content class=\\\"font\\\"> \\n    Short Time\\n    <ion-progress-bar color=\\\"warning\\\" style=\\\"height:10px \\\" value=\\\"0.2\\\"></ion-progress-bar>\\n  </ion-card-content>\\n  <ion-card-content class=\\\"font\\\"> \\n    Turn Around Time\\n    <ion-progress-bar  color=\\\"warning\\\" style=\\\"height:10px \\\" value=\\\"0.1\\\"></ion-progress-bar>\\n  </ion-card-content>\\n \\n</ion-card>\\n\\n<ion-item *ngFor=\\\"let jobcardid of id\\\" class=\\\"font\\\">\\n<ion-label class=\\\"ion-text-wrap\\\"><b>{{jobcardid.tasktitle}}</b></ion-label>\\n<img src=\\\"assets/icon/start.png\\\" tappable width=\\\"20\\\" height=\\\"20\\\" slot=\\\"end\\\" (click)=\\\"gotoChildTask(jobcardid.jobcardid,jobcardid.taskid,jobcardid.tasktitle)\\\"/>\\n</ion-item>\\n\\n</ion-content>\\n\"","module.exports = \".font {\\n  font-size: 11.5px; }\\n\\n.font2 {\\n  font-size: 11.5px;\\n  color: darkcyan; }\\n\\n.expand {\\n  font-size: 11.5px;\\n  max-width: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGFzay9DOlxccHJvamVjdFxcbmF0YXNoYS9zcmNcXGFwcFxccGFnZXNcXHRhc2tcXHRhc2sucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCLEVBQUE7O0FBTXJCO0VBQ0ksaUJBQWlCO0VBQ2pCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxpQkFBaUI7RUFDakIsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFzay90YXNrLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb250e1xyXG4gICAgZm9udC1zaXplOiAxMS41cHg7XHJcbiAgICBcclxuXHJcblxyXG59XHJcblxyXG4uZm9udDJ7XHJcbiAgICBmb250LXNpemU6IDExLjVweDtcclxuICAgIGNvbG9yOiBkYXJrY3lhbjtcclxufVxyXG5cclxuLmV4cGFuZHtcclxuICAgIGZvbnQtc2l6ZTogMTEuNXB4O1xyXG4gICAgbWF4LXdpZHRoOiA2MHB4O1xyXG59XHJcblxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { JobcardService } from 'src/app/services/jobcard.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.page.html',\n  styleUrls: ['./task.page.scss'],\n})\nexport class TaskPage implements OnInit {\n  serialNo: string;\n  jcTitle: string;\n  jobcardId: string;\n  loading: any;\n  id: any;\n  hideMe: boolean;\n  toggle: any;\n  success=0;\n  \n  constructor(private http: LoginService, private router: Router, public alertController: AlertController,public loadingCtrl: LoadingController,\n    public JobcardService: JobcardService) { \n\n     \n    }\n\n  ngOnInit() {\n    this.serialNo=this.JobcardService.serialNo;\n    this.jcTitle=this.JobcardService.jcTitle;\n    this.jobcardId=this.JobcardService.jobcardId;\n    this.getToTask( this.jobcardId);\n\n  \n    // this.success= \"{{jcTitle.jobcardcompletedtaskcount * 100 / jcTitle.jobcardtotaltaskcount}}\";\n  }\n\n  \n  async presentLoadingWithOptions() {\n    this.loading = await this.loadingCtrl.create({\n      message: 'Please wait...',\n      translucent: true,\n      cssClass: 'custom-class custom-loading'\n    });\n   return await this.loading.present();\n  }\n\n  getToTask(id){\n    this.presentLoadingWithOptions();\n   this.http.getToTask(id).subscribe(\n           response => {\n           this.loading.dismiss(); \n           this.id = response.Result[0].task;\n           console.log(this.id)\n           \n           \n         }, error => {\n           console.log(\"error\")\n         }\n       );\n   \n   }\n\n   hide() {\n    //  if(  this.hideMe = true){\n      this.hideMe = true;\n    //  }else{\n    //   this.hideMe = false;\n    //  }\n       \n  }\n  \n   gotoChildTask(id,taskid,tasktitle){\n    this.JobcardService.taskTitle=tasktitle;\n    console.log(this.JobcardService.taskTitle);\n    this.JobcardService.jobcardId=id;\n    console.log(this.JobcardService.jobcardId);\n    this.JobcardService.taskId=taskid;\n    console.log(this.JobcardService.taskId);\n    this.router.navigateByUrl('/menu/first/tabs/tab1/jobcard/task/'+id+'/childtask/'+taskid);\n   }\n  }\n \n\n"],"sourceRoot":""}